<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover"/>
    <meta http-equiv="X-UA-Compatible" content="ie=edge"/>
    <title>Citas</title>
    <link rel="icon" href="/img/favicon.ico" type="image/x-icon">
    <!-- bootstrap -->
    <link rel="stylesheet" href="/css/bootstrap-icons.css">
    <!-- custom -->
    <link rel="stylesheet" href="/css/estilos.min.css">
    <link rel="stylesheet" href="/css/navbar.css">
    <style>
      .sortable th {
        cursor: pointer;
      }
      .sortable .th-sort-asc::after {
        content: "\25b4";
      }
      .sortable .th-sort-desc::after {
        content: "\25be";
      }
      .sortable .th-sort-asc::after,
      .sortable .th-sort-desc::after {
        margin-left: 5px;
      }
    </style>
  </head>
  <body class="antialiased">
    <div class="wrapper">
      <%- include('../../partials/header') %>
      <%- include('../../partials/navbar', {opcion: 'CITAS'}) %>
      <div class="page-wrapper">
        <div class="page-body">
          <div class="container-xl">
            <div class="row row-deck row-cards">
              <div class="col-12">
                <div class="card">
                  <div class="card-header">
                    <h3 class="card-title">Citas</h3>
                    <div class="col-auto ms-auto">                                                                  
                      <div class="d-flex">
                        <div class="input-icon me-3">
                          <span class="input-icon-addon"><i class="bi bi-search"></i></span>
                          <input type="text" class="form-control d-inline-block me-3" id="buscarCitBox" onkeyup="arrayFilter();" placeholder="Buscar..." aria-label="Buscar en citas">
                        </div>
                        <a href="#" class="btn btn-warning" onclick="checkItem(this)">
                          <% if (datos.verTodo ) { %>
                            <i class='bi bi-eye-slash dropdown-item-icon'></i>Solo pendientes
                          <% } else { %>
                            <i class='bi bi-eye dropdown-item-icon'></i>Mostrar todo
                          <% } %>
                        </a>                        
                      </div>
                    </div>                    
                  </div>
                  <div class="card-body">
                    <table class="table table-vcenter table-striped sortable" id="tblCitas">
                      <thead>
                      <tr class="header">
                        <th class="w-4"></th>
                        <th class="w-5">Origen</th>
                        <th class="w-8">Oficina</th>
                        <th class="w-10">Fecha</th>
                        <th class="w-6">NIF</th>
                        <th>Nombre</th>
                        <th>Descripci√≥n</th>
                        <th>Observaciones</th>
                        <th class="w-3">C</th>
                        <th class="w-5"></th>
                      </tr>
                      </thead>
                      <tbody id="table-body">
                      </tbody>
                    </table>
                    <div id="pagination-wrapper" class="pagination py-1"></div>
                  </div>
                </div>                
              </div>
            </div>
          </div>
        </div>
        <%- include('../../partials/footer') %>
      </div>
    </div>
    
    <div class="modal modal-blur fade" id="modal-asignar" tabindex="-1" role="dialog" aria-hidden="true">
      <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
        <div class="modal-content">
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          <div class="modal-status bg-primary"></div>
          <form action="/admin/citas/asignar" method="POST">
            <div class="modal-body text-center py-4">
              <svg xmlns="http://www.w3.org/2000/svg" class="icon mb-2 text-blue icon-lg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M12 9v2m0 4v.01"></path>
                <path d="M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75"></path>
              </svg>
              <h3>Asignar cita</h3>
              <div id="texasi"></div>

              <div class="mb-1">
                <div class="form-label text-start">Tipo</div>
                <div class="input-control">
                  <select class="form-select form-control" id="cbotip" name="tipdoc" >
                  </select>
                  <div class="invalid-feedback"></div>
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <div class="w-100">
                <div class="row">
                  <div class="col">
                    <a href="/admin/citas" class="btn btn-white w-100" data-bs-dismiss="modal">Cancelar</a>
                  </div>
                  <div class="col">
                    <input type="hidden" id="asign" name="idcita" value="">
                    <button type="submit" class="btn btn-primary w-100">Asignar cita</button>
                  </div>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>

    <script src="/js/ayuda.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const messages = document.getElementById('messages')
      const socket = io()

      socket.on('receive-message', msg => {
        const li = document.createElement('li')
        li.textContent = msg
        messages.appendChild(li)

        const toggleBadge = document.querySelector('#toggleBadge');
        const numeroMensajes = messages.getElementsByTagName("li").length
        if (numeroMensajes === 1) {
          toggleBadge.classList.toggle('d-none')
        }
      })
    </script>
    <script>
      function checkItem(elem) {
        <% if (datos.verTodo) { %>
          window.location.href = 'http://localhost:4000/admin/citas'
        <% } else { %>
          window.location.href = 'http://localhost:4000/admin/citas/vertodo'
        <% } %>
      }
    </script>
    <script>
      const getCookie = (key) => {
        let value = ''
        document.cookie.split(';').forEach((e)=>{
          if(e.includes(key)) {
            value = e.split('=')[1]
          }
        })
        return value
      }
      const setCookie = (name,value,days) => {
        let expires = "";
        if (days) {
            let date = new Date();
            date.setTime(date.getTime() + (days*24*60*60*1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + (encodeURIComponent(value) || "")  + expires + "; path=/";
      }
      const deleteCookie = () => {
        document.cookie = 'filtro=; expires=Thu, 01 Jan 1970 00:00:01 GMT; Path=/;'
      }
    </script>
    <script>
      const elemBuscar = document.getElementById('buscarCitBox');
      elemBuscar.onchange = (event) => {
        setCookie('filtro', event.target.value, .5) // medio dia
      }

      function arrayFilter() {
        const filtro = elemBuscar.value.toUpperCase()
        const trimmedData = orgList.filter(itm => Object.keys(itm).some(k => JSON.stringify(itm[k]).includes(filtro)))

        state.querySet= trimmedData
        state.page = 1

        buildTable()
      }
    </script>
    <script>
      function sortTableByColumn(table, column, asc = true) {
        const dirModifier = asc ? 1 : -1;
        const tBody = table.tBodies[0];
        const rows = Array.from(tBody.querySelectorAll("tr"));

        const sortedRows = rows.sort((a, b) => {
          const aColText = a.cells[column].textContent;
          const bColText = b.cells[column].textContent;

          return aColText > bColText ? (1 * dirModifier) : (-1 * dirModifier);
        });

        for(let row of sortedRows) {
          tBody.appendChild( row );
        }

        table.querySelectorAll("th").forEach(th => th.classList.remove("th-sort-asc", "th-sort-desc"));
        table.querySelector(`th:nth-child(${ column + 1})`).classList.toggle("th-sort-asc", asc);
        table.querySelector(`th:nth-child(${ column + 1})`).classList.toggle("th-sort-desc", !asc);
      }

      document.querySelectorAll(".sortable th").forEach(headerCell => {
        headerCell.addEventListener("click", () => {
          const tableElement = headerCell.parentElement.parentElement.parentElement;
          const headerIndex = Array.prototype.indexOf.call(headerCell.parentElement.children, headerCell);
          const currentIsAscending = headerCell.classList.contains("th-sort-asc");
          
          sortTableByColumn(tableElement, headerIndex, !currentIsAscending);
        });
      });
    </script>
    <script>
      const Tipos = () => {
        const xhr = new XMLHttpRequest();

        xhr.onload = function() {
          if (xhr.status === 200) {
            const tipos = JSON.parse(xhr.response)
            const cbo = document.getElementById('cbotip')

            tipos.map((itm) => {
              const option = document.createElement('option')
              option.value = itm.IDTIPO
              option.text = itm.DESTIP
              cbo.appendChild(option)
            })
          }
        };
        xhr.open('POST', 'http://localhost:8000/api/tipos/formularios', true);
        xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
        xhr.send()
      }
      Tipos();
    </script>
    <script>
      const orgList = <%- datos.citas %>
    let state = {
      'querySet': orgList,
      'page': 1,
      'rows': 9,
      'window': 3 ,
    }

      elemBuscar.value = getCookie('filtro')
      if (elemBuscar.value !== '') {
        arrayFilter()
      } else {
        buildTable()
      }
      
      function pagination(querySet, page, rows) {
        const trimStart = (page - 1) * rows
        const trimEnd = trimStart + rows
        const trimmedData = querySet.slice(trimStart, trimEnd)
        const pages = Math.ceil(querySet.length / rows);

        return {
          'querySet': trimmedData,
          'pages': pages,
        }
      }
      function pageButtons(pages) {
        var wrapper = document.getElementById('pagination-wrapper')
        var maxLeft = (state.page - Math.floor(state.window / 2))
        var maxRight = (state.page + Math.floor(state.window / 2))
        
        wrapper.innerHTML = ``
        if (maxLeft < 1) {
          maxLeft = 1
          maxRight = state.window
        }

        if (maxRight > pages) {
          maxLeft = pages - (state.window - 1)
          
          if (maxLeft < 1){
            maxLeft = 1
          }
          maxRight = pages
        }

        for (var page = maxLeft; page <= maxRight; page++) {
            wrapper.innerHTML += `<button value=${page} class="page-item btn btn-primary">${page}</button>`
        } 
        // if (state.page != 1) {
          wrapper.innerHTML = `<button value=${1} class="page-item btn btn-primary">&#171; Primero</button>` + wrapper.innerHTML
        // }          
        // if (state.page != pages) {
          wrapper.innerHTML += `<button value=${pages} class="page-item btn btn-primary">√öltimo &#187;</button>`
        // }

        const elem = document.getElementsByClassName('page-item')
        for (let i = 0; i < elem.length; i++) {
          elem[i].addEventListener('click', (e) => {
            state.page = Number(e.target.value)

            buildTable()
          })
        }
      }
      function buildTable() {
          const table = document.getElementById('table-body')
          const data = pagination(state.querySet, state.page, state.rows)
          const lista = data.querySet
          table.innerHTML = ''

          lista.map(element => {
            // col1
            const row = document.createElement('tr')
            let cell = document.createElement('td')
            cell.classList.add("w-4")
            if (element.STACIT === <%- datos.estadosCita.disponible %>) {
              cell.innerHTML = `<div class="align-items-center py-1">
                <span class="avatar avatar-rounded bg-red-lt">
                  <h6>DISP</h6>
                </span>
              </div>`
            } else {
              cell.innerHTML = `<div class="align-items-center py-1">
                <span class="avatar avatar-rounded bg-green-lt">
                  <h6>ASIG</h6>
                </span>
              </div>`
            }
            row.appendChild(cell)

            // col2
            cell = document.createElement('td')
            cell.classList.add("w-4")
            cell.innerHTML = `<div class="d-flex py-1 align-items-center">
              <div class="flex-fill">
                <div class="font-weight-medium">${element.ORGCIT.slice(0,4)}</div>
              </div>
            </div>`
            row.appendChild(cell)

            // col3
            cell = document.createElement('td')
            cell.classList.add("w-8")
            cell.innerHTML = `<div class="d-flex py-1 align-items-center">
              <div class="flex-fill">
                <div class="font-weight-medium">${element.DESOFI}</div>
              </div>
            </div>`
            row.appendChild(cell)

            // col4
            cell = document.createElement('td')
            cell.classList.add("w-10")
            cell.innerHTML = `<div class="d-flex py-1 align-items-center">
              <div class="flex-fill">
                <div class="font-weight-medium">${element.STRFEC} ${element.HORCIT}</div>
              </div>
            </div>`
            row.appendChild(cell)

            // col5
            cell = document.createElement('td')
            cell.classList.add("w-6")
            cell.innerHTML = `<div class="d-flex py-1 align-items-center">
              <div class="flex-fill">
                <div class="font-weight-medium">${element.NIFCON}</div>
              </div>
            </div>`
            row.appendChild(cell)

            // col6
            cell = document.createElement('td')
            cell.innerHTML = `<div class="d-flex py-1 align-items-center">
              <div class="flex-fill">
                <div class="font-weight-medium">${element.NOMCON}</div>
              </div>
            </div>`
            row.appendChild(cell)

            // col7
            cell = document.createElement('td')
            cell.innerHTML = `<div class="d-flex py-1 align-items-center">
              <div class="flex-fill">
                <div class="font-weight-medium">${element.DESCIT}</div>
              </div>
            </div>`
            row.appendChild(cell)

            // col8
            cell = document.createElement('td')
            if (element.OBSCIT !== null) {
              cell.innerHTML = `<div class="d-flex py-1 align-items-center">
                <div class="flex-fill">
                  <div class="font-weight-medium">${element.OBSCIT.length > 33 ? element.OBSCIT.slice(0,33) + '...': element.OBSCIT}</div>
                </div>
              </div>`
            }
            row.appendChild(cell)

            // col5
            cell = document.createElement('td')
            cell.classList.add("w-3")
            cell.innerHTML = `<div class="d-flex py-1 align-items-center">
              <div class="flex-fill">
                <div class="font-weight-medium">${element.COMPLE}</div>
              </div>
            </div>`
            row.appendChild(cell)

            // col10
            cell = document.createElement('td')
            cell.classList.add("w-5")
            if (element.STACIT === <%- datos.estadosCita.disponible %>) {
              cell.innerHTML = `<ul class="dots-menu">
                <li class="nav-item drop-right">
                  <a href="#" class="nav-link">
                    <i class="bi bi-three-dots-vertical"></i>
                  </a>
                  <ul>
                    <li class="nav-item">
                      <a href="/admin/citas/edit/${element.IDCITA}" class="nav-link">
                        <i class="bi bi-pencil dropdown-item-icon"></i>Editar cita
                      </a>
                    </li>
                    <li class="nav-item">
                      <a href="#" class="nav-link" onclick="{document.getElementById('asign').value ='${element.IDCITA}', document.getElementById('texasi').innerHTML ='<p>${element.FECCIT}</p><p>${element.NIFCON}</p><p>${element.NOMCON}</p>'}" data-bs-toggle="modal" data-bs-target="#modal-asignar">
                        <i class="bi bi-heart dropdown-item-icon"></i>Generar formulario
                      </a>
                    </li>
                  </ul>
                </li>                              
              </ul>`
            } else {
              cell.innerHTML = ``
            }
            row.appendChild(cell)

            table.appendChild(row)
          })

          pageButtons(data.pages)
      }
    </script>
  </body>
</html>